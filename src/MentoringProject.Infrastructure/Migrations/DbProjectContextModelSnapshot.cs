// <auto-generated />
using System;
using MentoringProject.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MentoringProject.Infrastructure.Migrations
{
    [DbContext(typeof(DbProjectContext))]
    partial class DbProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MentoringProject.Domain.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba76963d-cfc4-4b49-a026-304a8f099424"),
                            Brand = "BMW",
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("3aba351f-87ba-46e4-86aa-2b164eeb6965"),
                            Brand = "Mercedes",
                            Color = "Black"
                        },
                        new
                        {
                            Id = new Guid("dc4540e2-8bf0-4d2b-8e88-14fa7d367a42"),
                            Brand = "Nissan",
                            Color = "White"
                        });
                });

            modelBuilder.Entity("MentoringProject.Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5391fc12-1596-4cf4-9db7-b6c8bd087f13"),
                            FirstName = "Tom",
                            LastName = "Wolker"
                        },
                        new
                        {
                            Id = new Guid("259844cc-770f-419d-ada4-6c7879aa0033"),
                            FirstName = "Adam",
                            LastName = "Wolker"
                        },
                        new
                        {
                            Id = new Guid("b41fb727-56c6-4e62-8d96-905da9dcf5c9"),
                            FirstName = "Alice",
                            LastName = "Wolker"
                        });
                });

            modelBuilder.Entity("MentoringProject.Domain.Entities.OwnerCar", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OwnerId", "CarId");

                    b.HasIndex("CarId");

                    b.ToTable("OwnerCars");
                });

            modelBuilder.Entity("MentoringProject.Domain.Entities.OwnerCar", b =>
                {
                    b.HasOne("MentoringProject.Domain.Entities.Car", "Car")
                        .WithMany("UserCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MentoringProject.Domain.Entities.Owner", "Owner")
                        .WithMany("OwnersCars")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MentoringProject.Domain.Entities.Car", b =>
                {
                    b.Navigation("UserCars");
                });

            modelBuilder.Entity("MentoringProject.Domain.Entities.Owner", b =>
                {
                    b.Navigation("OwnersCars");
                });
#pragma warning restore 612, 618
        }
    }
}
